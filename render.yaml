services:
  # Backend Service (Python)
  - type: web
    name: pulseq-python
    env: docker
    dockerfilePath: ./Dockerfile.python
    envVars:
      - key: FLASK_APP
        value: server/app.py
      - key: FLASK_ENV
        value: production
      - key: PORT
        value: 5000
      - key: MONGODB_URI
        fromDatabase:
          name: pulseq-mongodb
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: PYTHONUNBUFFERED
        value: '1'
    healthCheckPath: /health
    autoDeploy: true
    workingDirectory: /app

  # Node.js API Service
  - type: web
    name: pulseq-node
    env: docker
    dockerfilePath: ./Dockerfile.node
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: PYTHON_SERVER_URL
        fromService:
          name: pulseq-python
          type: web
          property: url
      - key: MONGODB_URI
        fromService:
          name: pulseq-mongodb
          type: mongodb
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: SESSION_SECRET
        generateValue: true
    healthCheckPath: /health
    autoDeploy: true

  # Frontend Service
  - type: web
    name: pulseq-frontend
    env: docker
    dockerfilePath: ./client/Dockerfile
    envVars:
      - key: REACT_APP_BACKEND_URL
        fromService:
          name: pulseq-node
          type: web
          property: url
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    autoDeploy: true

# MongoDB Database
databases:
  - name: pulseq-mongodb
    databaseName: pulseq
    user: pulseq_user
    envVars:
      - key: NODE_ENV
        value: production
    headers:
      - path: /*
        name: Access-Control-Allow-Origin
        value: https://pulseq-backend.onrender.com
